{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Feel free to consult the FAQ for quick answers to questions you may have. I am a user \u00b6 You can start by reading the interface description to familiarize yourself with the different sections of the site. Then, you can read the tutorial on how to use the visualization Network for a more efficient use. I am a developer \u00b6 Do you want to reuse the project or study its design? You can find in this documentation all the information related to the download and installation of the functions, as well as the source code architecture , and list of project dependencies .","title":"Home"},{"location":"#i-am-a-user","text":"You can start by reading the interface description to familiarize yourself with the different sections of the site. Then, you can read the tutorial on how to use the visualization Network for a more efficient use.","title":"I am a user"},{"location":"#i-am-a-developer","text":"Do you want to reuse the project or study its design? You can find in this documentation all the information related to the download and installation of the functions, as well as the source code architecture , and list of project dependencies .","title":"I am a developer"},{"location":"faq/","text":"Content \u00b6 How to share a record? You can share your browser's page address once you have selected the entity to share. Where to propose content changes? This site is perfect, nothing to add. Development \u00b6 Can I reuse the project ? Yes, you can find all the download and installation instructions as well as a guide to the project architecture and the list of its dependencies .","title":"FAQ"},{"location":"faq/#content","text":"How to share a record? You can share your browser's page address once you have selected the entity to share. Where to propose content changes? This site is perfect, nothing to add.","title":"Content"},{"location":"faq/#development","text":"Can I reuse the project ? Yes, you can find all the download and installation instructions as well as a guide to the project architecture and the list of its dependencies .","title":"Development"},{"location":"version-history/","text":"History and logic of the project. \u00b6 The Otletosphere is a web visualization project that is part of the HyperOtlet research project. The Otletosphere has so far had 2 public versions. The development of the otletosphere is part of the HyperOtlet project, funded by the ANR [ANR-17-CE38-0011]. https://anr.fr/Projet-ANR-17-CE38-0011 The project's research notebook is available here https://hyperotlet.hypotheses.org/ . The objective is to propose a visualization of the network of people around Paul Otlet. The Otletosphere is a relational cartography of the personalities and institutions linked to Paul Otlet. The study of Paul Otlet's network of people allows us to imagine a work of collecting the personal relationships he was able to establish during his years of correspondence. Based on his correspondence archived at the Mundaneum of Mons which is the museum dedicated to his work , we were able to create a database that includes the different people with whom he came into contact. The cartographic representation of a network of people required reflection and graphic influences to achieve an interesting and graphically user-friendly scientific representation. This project is based on the observation of Paul Otlet's strong involvement in international peace organizations as well as in bibliographical and documentary institutions. This project is based on the observation of Paul Otlet's strong involvement in international peace organizations as well as in bibliographical and documentary institutions. The initial inspiration comes from the graphic representation of the Marvel transmedia universe produced by the team of the Singaporean newspaper \" The Straits Time \", which presents itself as a veritable constellation of superheroes, linked together by their relationships within the narrative universes. First version \u00b6 The development started in January 2019 and lays the foundations for the project: Theoretical concepts: relations to Otlet and other metadata Interface: two sections View and Database , description pane, spatial and linguistic navigation tools Graphic charter Page About The basic idea came from Olivier Le Deuff, a lecturer in information and communication sciences at Bordeaux Montaigne University, who wanted to create an interactive visualization around Otlet. Jean David, student in master 2 DNDH is then in charge of the realization of the first prototype. Arthur Perret and Cl\u00e9ment Borel bring their skills on data, graphics, design, typography, etc... Second version \u00b6 The development starts in April 2020 and consists in redesigning a theoretically accomplished work with a complete interface. Apart from the addition of navigation tools, it is a project of perpetuation, harmonization and design. We note the following major modifications: Navigation \u00b6 addition of a search tool merge the View and Database sections to give Network and Cards . description pane: display connections between nodes and junction between Network and Sheets with the View button browsing history Sustainability \u00b6 Data: structure the data entry in a single GSheet and make the injection sustainable. Programming: update dependencies and refactor the code Facilitate (re)use: documentation and opening of source code with API Bibliography \u00b6 Olivier Le Deuff, Jean David, Arthur Perret, Cl\u00e9ment Borel. Surfer dans l'Otletosph\u00e8re Des outils pour visualiser et interroger le r\u00e9seau de Paul Otlet. H2PTM\u201919. De l\u2019hypertexte aux humanit\u00e9s num\u00e9riques, Roxin Ioan, Oct 2019, Montbelliard, France. p.65-76. disponible ici .","title":"Version history"},{"location":"version-history/#history-and-logic-of-the-project","text":"The Otletosphere is a web visualization project that is part of the HyperOtlet research project. The Otletosphere has so far had 2 public versions. The development of the otletosphere is part of the HyperOtlet project, funded by the ANR [ANR-17-CE38-0011]. https://anr.fr/Projet-ANR-17-CE38-0011 The project's research notebook is available here https://hyperotlet.hypotheses.org/ . The objective is to propose a visualization of the network of people around Paul Otlet. The Otletosphere is a relational cartography of the personalities and institutions linked to Paul Otlet. The study of Paul Otlet's network of people allows us to imagine a work of collecting the personal relationships he was able to establish during his years of correspondence. Based on his correspondence archived at the Mundaneum of Mons which is the museum dedicated to his work , we were able to create a database that includes the different people with whom he came into contact. The cartographic representation of a network of people required reflection and graphic influences to achieve an interesting and graphically user-friendly scientific representation. This project is based on the observation of Paul Otlet's strong involvement in international peace organizations as well as in bibliographical and documentary institutions. This project is based on the observation of Paul Otlet's strong involvement in international peace organizations as well as in bibliographical and documentary institutions. The initial inspiration comes from the graphic representation of the Marvel transmedia universe produced by the team of the Singaporean newspaper \" The Straits Time \", which presents itself as a veritable constellation of superheroes, linked together by their relationships within the narrative universes.","title":"History and logic of the project."},{"location":"version-history/#first-version","text":"The development started in January 2019 and lays the foundations for the project: Theoretical concepts: relations to Otlet and other metadata Interface: two sections View and Database , description pane, spatial and linguistic navigation tools Graphic charter Page About The basic idea came from Olivier Le Deuff, a lecturer in information and communication sciences at Bordeaux Montaigne University, who wanted to create an interactive visualization around Otlet. Jean David, student in master 2 DNDH is then in charge of the realization of the first prototype. Arthur Perret and Cl\u00e9ment Borel bring their skills on data, graphics, design, typography, etc...","title":"First version"},{"location":"version-history/#second-version","text":"The development starts in April 2020 and consists in redesigning a theoretically accomplished work with a complete interface. Apart from the addition of navigation tools, it is a project of perpetuation, harmonization and design. We note the following major modifications:","title":"Second version"},{"location":"version-history/#navigation","text":"addition of a search tool merge the View and Database sections to give Network and Cards . description pane: display connections between nodes and junction between Network and Sheets with the View button browsing history","title":"Navigation"},{"location":"version-history/#sustainability","text":"Data: structure the data entry in a single GSheet and make the injection sustainable. Programming: update dependencies and refactor the code Facilitate (re)use: documentation and opening of source code with API","title":"Sustainability"},{"location":"version-history/#bibliography","text":"Olivier Le Deuff, Jean David, Arthur Perret, Cl\u00e9ment Borel. Surfer dans l'Otletosph\u00e8re Des outils pour visualiser et interroger le r\u00e9seau de Paul Otlet. H2PTM\u201919. De l\u2019hypertexte aux humanit\u00e9s num\u00e9riques, Roxin Ioan, Oct 2019, Montbelliard, France. p.65-76. disponible ici .","title":"Bibliography"},{"location":"development/architecture-source-code/","text":"The following diagrams show the organization of the source code. They allow a better understanding of the software and thus to be able to make modifications more easily. File tree structure \u00b6 The following diagram shows the distribution of files in the source code directory as it is possible to upload to the GitHub repository . Notice to developers Be careful not to misplace any files or directories, otherwise some software dependencies in the project may malfunction and you may lose functionality. graph LR index.html package.json gulpfile.js /libs /dist --> sass /dist --> scripts /assets --> font /assets --> icons /assets --> main.css /assets --> main.js /data --> entite.json /data --> metas.json /data --> lien.json /data --> /images Architecture of the Network functions \u00b6 flowchart TB subgraph class network obj_options --> obj_visualisation obj_data obj_zoom int_selectedNode end evt_selectNode--> fx_switchNode fx_getNodeMetas--> fx_switchNode fx_switchNode --> fx_zoomToNode fx_switchNode --> fx_fill fx_switchNode --> fx_open fx_switchNode --> int_selectedNode fx_chooseColor --> obj_options obj_data --> |get.filter| fx_getNodeMetas obj_visualisation --> |getPosition| fx_zoomToNode obj_visualisation --> |moveTo| fx_zoomToNode obj_visualisation --> evt_selectNode obj_visualisation --> evt_blurNode obj_visualisation --> evt_hoverNode evt_hoverNode --> obj_data evt_blurNode --> obj_data obj_zoom --> evt_zoom evt_zoom <--> obj_visualisation fx_createNodeObject --> obj_data fx_createEdgeObject --> obj_data fx_findConnectedNodes --> fx_fill obj_data --> fx_findConnectedNodes fx_getNodeMetas--> fx_findConnectedNodes subgraph class fiche fx_fill fx_open end evt_selectNode --> fx_actualiser subgraph class historique fx_actualiser --> fx_init end subgraph class commands elt_btnPlus elt_btnMoins elt_btnReinitialiser end elt_btnPlus --> evt_cliq elt_btnMoins --> evt_cliq elt_btnReinitialiser --> evt_cliq obj_zoom --> evt_cliq evt_cliq --> obj_visualisation obj_visualisation","title":"Source code"},{"location":"development/architecture-source-code/#file-tree-structure","text":"The following diagram shows the distribution of files in the source code directory as it is possible to upload to the GitHub repository . Notice to developers Be careful not to misplace any files or directories, otherwise some software dependencies in the project may malfunction and you may lose functionality. graph LR index.html package.json gulpfile.js /libs /dist --> sass /dist --> scripts /assets --> font /assets --> icons /assets --> main.css /assets --> main.js /data --> entite.json /data --> metas.json /data --> lien.json /data --> /images","title":"File tree structure"},{"location":"development/architecture-source-code/#architecture-of-the-network-functions","text":"flowchart TB subgraph class network obj_options --> obj_visualisation obj_data obj_zoom int_selectedNode end evt_selectNode--> fx_switchNode fx_getNodeMetas--> fx_switchNode fx_switchNode --> fx_zoomToNode fx_switchNode --> fx_fill fx_switchNode --> fx_open fx_switchNode --> int_selectedNode fx_chooseColor --> obj_options obj_data --> |get.filter| fx_getNodeMetas obj_visualisation --> |getPosition| fx_zoomToNode obj_visualisation --> |moveTo| fx_zoomToNode obj_visualisation --> evt_selectNode obj_visualisation --> evt_blurNode obj_visualisation --> evt_hoverNode evt_hoverNode --> obj_data evt_blurNode --> obj_data obj_zoom --> evt_zoom evt_zoom <--> obj_visualisation fx_createNodeObject --> obj_data fx_createEdgeObject --> obj_data fx_findConnectedNodes --> fx_fill obj_data --> fx_findConnectedNodes fx_getNodeMetas--> fx_findConnectedNodes subgraph class fiche fx_fill fx_open end evt_selectNode --> fx_actualiser subgraph class historique fx_actualiser --> fx_init end subgraph class commands elt_btnPlus elt_btnMoins elt_btnReinitialiser end elt_btnPlus --> evt_cliq elt_btnMoins --> evt_cliq elt_btnReinitialiser --> evt_cliq obj_zoom --> evt_cliq evt_cliq --> obj_visualisation obj_visualisation","title":"Architecture of the Network functions"},{"location":"development/installation/","text":"Downloading and installing the Otletosphere softwarea The following instructions are for downloading and installing the software that runs the Otletosphere for use in your own project. First you will find the instructions for downloading the various packages, then additional explanations for installing the development tools and making editing the project easier. To change the software database or its operation , please follow the other tutorials. Download \u00b6 The latest tested version of the source code is stored on a GitHub repository . There are two installation methods. By command \u00b6 Once in the desired location, you can download the content using the following command line if you have Git software installed. $ git clone https://github.com/hyperotlet/otletosphere.git By zip file \u00b6 You can also go to the GitHub repository and click the Clone or download button and then click Download ZIP . You can then simply unzip the downloaded archive and place it in the location of your choice: unzip an archive on Windows unzip an archive on macOS Gulp.js \u00b6 Gulp.js is a Node.js module that works well with command boxes ( Windows Command Prompt and MacOS Terminal*). Here is a complete installation tutorial on the subject: https://www.alsacreations.com/tuto/lire/1686-introduction-a-gulp.html The package.json file contains all the necessary dependencies, and the gulpfile.js contains the appropriate configuration for the environment. To install the dependencies you can execute the following command: npm install Commandes \u00b6 The following command allows you to start processing the .scss and .js files respectively from directories /sass and /scripts to /assets/main.css and /assets/main.js . gulp watch Each time a .scss or .js file is saved to the /sass or /scripts locations, Gulp.js compiles the files.","title":"Download and installation"},{"location":"development/installation/#download","text":"The latest tested version of the source code is stored on a GitHub repository . There are two installation methods.","title":"Download"},{"location":"development/installation/#by-command","text":"Once in the desired location, you can download the content using the following command line if you have Git software installed. $ git clone https://github.com/hyperotlet/otletosphere.git","title":"By command"},{"location":"development/installation/#by-zip-file","text":"You can also go to the GitHub repository and click the Clone or download button and then click Download ZIP . You can then simply unzip the downloaded archive and place it in the location of your choice: unzip an archive on Windows unzip an archive on macOS","title":"By zip file"},{"location":"development/installation/#gulpjs","text":"Gulp.js is a Node.js module that works well with command boxes ( Windows Command Prompt and MacOS Terminal*). Here is a complete installation tutorial on the subject: https://www.alsacreations.com/tuto/lire/1686-introduction-a-gulp.html The package.json file contains all the necessary dependencies, and the gulpfile.js contains the appropriate configuration for the environment. To install the dependencies you can execute the following command: npm install","title":"Gulp.js"},{"location":"development/installation/#commandes","text":"The following command allows you to start processing the .scss and .js files respectively from directories /sass and /scripts to /assets/main.css and /assets/main.js . gulp watch Each time a .scss or .js file is saved to the /sass or /scripts locations, Gulp.js compiles the files.","title":"Commandes"},{"location":"development/libraries/","text":"To build the website quickly, but also to improve the maintainability and readability of the source code, the development team used the following libraries. No additional installation required Except for the Gulp.js related libraries , all are included in the Otletosphere directory and require no additional installation to work. The different documentations are attached so that developers can understand and adapt the use of these libraries. JavaScript \u00b6 Vis.js \u00b6 The JavaScript library Vis.js allowed us to visualize the Network section thanks to two of its components : Network and DataSet . The library allowed us to process the data (storage, sorting, circulation of data between functions), but also to generate the canvas, its animation and finally the management of events within it (selection, hovering, zooming). Fuse.js \u00b6 The JavaScript library Fuse.js allowed us to implement the entity search engine. It allows us to browse arrays of JavaScript objects with a search criterion in order to extract the most relevant objects. CSS \u00b6 Bootstrap \u00b6 We used the CSS part of the [Bootstrap] library ( https://getbootstrap.com/ ) to easily build a flexible interface for tablet and desktop. Gulp.js \u00b6 Below is the list of Node.js dependencies used for the production of source code via the [Gulp.js] tool ( https://gulpjs.com/ ). This modularized library is not required for installation, nor does it need to be modified: the configuration files package.json and gulpfile.js are useful for developers who want to take advantage of the Gulp.js source code production tool: it is custom-configured. However, an additional installation is required. gulp-autoprefixer : https://www.npmjs.com/package/gulp-autoprefixer gulp-concat : https://www.npmjs.com/package/gulp-concat gulp-sass : https://www.npmjs.com/package/gulp-sass node-sass : https://www.npmjs.com/package/node-sass","title":"Libraries"},{"location":"development/libraries/#javascript","text":"","title":"JavaScript"},{"location":"development/libraries/#visjs","text":"The JavaScript library Vis.js allowed us to visualize the Network section thanks to two of its components : Network and DataSet . The library allowed us to process the data (storage, sorting, circulation of data between functions), but also to generate the canvas, its animation and finally the management of events within it (selection, hovering, zooming).","title":"Vis.js"},{"location":"development/libraries/#fusejs","text":"The JavaScript library Fuse.js allowed us to implement the entity search engine. It allows us to browse arrays of JavaScript objects with a search criterion in order to extract the most relevant objects.","title":"Fuse.js"},{"location":"development/libraries/#css","text":"","title":"CSS"},{"location":"development/libraries/#bootstrap","text":"We used the CSS part of the [Bootstrap] library ( https://getbootstrap.com/ ) to easily build a flexible interface for tablet and desktop.","title":"Bootstrap"},{"location":"development/libraries/#gulpjs","text":"Below is the list of Node.js dependencies used for the production of source code via the [Gulp.js] tool ( https://gulpjs.com/ ). This modularized library is not required for installation, nor does it need to be modified: the configuration files package.json and gulpfile.js are useful for developers who want to take advantage of the Gulp.js source code production tool: it is custom-configured. However, an additional installation is required. gulp-autoprefixer : https://www.npmjs.com/package/gulp-autoprefixer gulp-concat : https://www.npmjs.com/package/gulp-concat gulp-sass : https://www.npmjs.com/package/gulp-sass node-sass : https://www.npmjs.com/package/node-sass","title":"Gulp.js"},{"location":"development/register-data/","text":"Data entry \u00b6 You will find in the directory tree Otletosphere the two JSON example files: entite.json and lien.json . To bring your own content you need to replace the values in these files according to the recommendations presented on this page. Data format \u00b6 The data integrity constraint is strong. It is necessary to link the different objects by their identifiers , taking care during data entry to respect the typing and relational logic at the heart of the software. Empty value, null value Make sure that any values not filled in are typed as \"null\" in your JSON files. Otherwise fields may appear empty. Entities \u00b6 This involves registering all the entities that will be integrated into the Network and Sheets views of the site. Below is a sample entite.json file and its data table describing the typing of the different values. JSON File [ { \"label\" : \"Paul Otlet\" , \"id\" : 1 , \"relation_otlet\" : \"otlet\" , \"prenom\" : \"Paul\" , \"nom\" : \"Otlet\" , \"titre\" : \"Fondateur du Mundaneum\" , \"genre\" : \"Homme\" , \"annee_naissance\" : 1868 , \"annee_mort\" : 1944 , \"pays\" : \"Belgique\" , \"pays_en\" : \"Belgium\" , \"discipline\" : \"Bibliographie\" , \"discipline_en\" : \"Bibliography\" , \"description\" : \"Paul Otlet est la t\u00eate pensante du Mundaneum\u2026\" , \"description_en\" : \"Paul Otlet is the mind behind the Mundaneum\u2026\" , \"photo\" : \"OtletPaul.png\" , \"lien_wikipedia\" : \"https://fr.wikipedia.org/wiki/Paul_Otlet\" } ] Data table Key Value Comment id unique integer greater than 0 identifiant unique label string display name of the entity relation string entity's group name titre string short complement to the name genre string man or woman annee_naissance integer year (ex: 1956) annee_mort integer year (ex: 1956) pays string pays_en string English translation discipline string discipline_en string English translation description string description_en string English translation photo file path path, image name and extension lien_wikipedia URL address Links \u00b6 This defines the relationships between entities created according to the above model as they will appear in the Network view and the Connections portion of the View Pane . Below is a sample `lien.json' file and its data table. JSON file [ { \"id\" : 1 , \"from\" : 1 , \"to\" : 2 , \"label\" : \"\" }, { \"id\" : 2 , \"from\" : 1 , \"to\" : 3 , \"label\" : \"Il travaillent ensemble <b>depuis 10 ans<b>\" } ] Data table Key Value Comment id unique integer greater than 0 identifiant unique lien from unique integer greater than 0 identifiant unique entit\u00e9 to unique integer greater than 0 identifiant unique entit\u00e9 label HTML description avec des balises <b> , <i> , <a> Input \u00b6 In order to complete, possibly in a collaborative way, your database with the numerous metadata, while respecting the integrity constraints and with the possibility of exporting easily in JSON, we advise you to use a spreadsheet type software. Here's a workflow proposal. flowchart TD subgraph Entites entite_label entite_id relation prenom nom titre genre annee_naissance annee_mort pays pays_en discipline discipline_en entite_description entite_description_en photo lien_wikipedia end subgraph Liens lien_id from to label end subgraph Pays pays_label_fr --> pays pays_label_en --> pays_en end subgraph Relations relation_label --> relation end id --> from id --> to Tools \u00b6 Here are some free, collaborative tools that are easy to use and allow you to set up an adequate input environment as presented above. Airtable \u00b6 Airtable is a hybrid tool between spreadsheet and database and will best help you ensure the relationship between your entity objects and links, while managing the numerous metadata that you can easily standardize. Once the different tables are completed, you can link their contents in order to facilitate the entry, but also to ensure the relationship between the identifiers. Google Sheet \u00b6 The Google Sheet tool provided in Google Drive allows you to have an online spreadsheet and export to JSON using the Export Sheet Data extension. Exporter en JSON avec Export Sheet Data Install the Google Sheet extension from the Add-ons tab, Download Add-ons button. In the same tab is now displayed the tool: once on your Entities or Links sheet, click on Open Sidebar and enter the following configuration (settings not mentioned below are on off , unchecked) : Export Format : JSON Export Sheet(s) : Current Sheet only Include first column : yes Export contents as array : yes The buttons at the bottom of the Sidebar allow you to complete the operation. All you have to do is to integrate the files in the /data directory of the software tree . Do not hesitate to use the [data validation] tool ( https://support.google.com/docs/answer/186103?co=GENIE.Platform%3DDesktop&hl=fr ) in conjunction with other sheets such as Countries , Relations etc. in order to standardize data completion as much as possible and avoid errors. You can also use the integrated translation function in Google Sheet for your multilingual versions or the SEARCH function to ensure the correspondence between your labels and unique identifiers.","title":"Register data"},{"location":"development/register-data/#data-entry","text":"You will find in the directory tree Otletosphere the two JSON example files: entite.json and lien.json . To bring your own content you need to replace the values in these files according to the recommendations presented on this page.","title":"Data entry"},{"location":"development/register-data/#data-format","text":"The data integrity constraint is strong. It is necessary to link the different objects by their identifiers , taking care during data entry to respect the typing and relational logic at the heart of the software. Empty value, null value Make sure that any values not filled in are typed as \"null\" in your JSON files. Otherwise fields may appear empty.","title":"Data format"},{"location":"development/register-data/#entities","text":"This involves registering all the entities that will be integrated into the Network and Sheets views of the site. Below is a sample entite.json file and its data table describing the typing of the different values. JSON File [ { \"label\" : \"Paul Otlet\" , \"id\" : 1 , \"relation_otlet\" : \"otlet\" , \"prenom\" : \"Paul\" , \"nom\" : \"Otlet\" , \"titre\" : \"Fondateur du Mundaneum\" , \"genre\" : \"Homme\" , \"annee_naissance\" : 1868 , \"annee_mort\" : 1944 , \"pays\" : \"Belgique\" , \"pays_en\" : \"Belgium\" , \"discipline\" : \"Bibliographie\" , \"discipline_en\" : \"Bibliography\" , \"description\" : \"Paul Otlet est la t\u00eate pensante du Mundaneum\u2026\" , \"description_en\" : \"Paul Otlet is the mind behind the Mundaneum\u2026\" , \"photo\" : \"OtletPaul.png\" , \"lien_wikipedia\" : \"https://fr.wikipedia.org/wiki/Paul_Otlet\" } ] Data table Key Value Comment id unique integer greater than 0 identifiant unique label string display name of the entity relation string entity's group name titre string short complement to the name genre string man or woman annee_naissance integer year (ex: 1956) annee_mort integer year (ex: 1956) pays string pays_en string English translation discipline string discipline_en string English translation description string description_en string English translation photo file path path, image name and extension lien_wikipedia URL address","title":"Entities"},{"location":"development/register-data/#links","text":"This defines the relationships between entities created according to the above model as they will appear in the Network view and the Connections portion of the View Pane . Below is a sample `lien.json' file and its data table. JSON file [ { \"id\" : 1 , \"from\" : 1 , \"to\" : 2 , \"label\" : \"\" }, { \"id\" : 2 , \"from\" : 1 , \"to\" : 3 , \"label\" : \"Il travaillent ensemble <b>depuis 10 ans<b>\" } ] Data table Key Value Comment id unique integer greater than 0 identifiant unique lien from unique integer greater than 0 identifiant unique entit\u00e9 to unique integer greater than 0 identifiant unique entit\u00e9 label HTML description avec des balises <b> , <i> , <a>","title":"Links"},{"location":"development/register-data/#input","text":"In order to complete, possibly in a collaborative way, your database with the numerous metadata, while respecting the integrity constraints and with the possibility of exporting easily in JSON, we advise you to use a spreadsheet type software. Here's a workflow proposal. flowchart TD subgraph Entites entite_label entite_id relation prenom nom titre genre annee_naissance annee_mort pays pays_en discipline discipline_en entite_description entite_description_en photo lien_wikipedia end subgraph Liens lien_id from to label end subgraph Pays pays_label_fr --> pays pays_label_en --> pays_en end subgraph Relations relation_label --> relation end id --> from id --> to","title":"Input"},{"location":"development/register-data/#tools","text":"Here are some free, collaborative tools that are easy to use and allow you to set up an adequate input environment as presented above.","title":"Tools"},{"location":"development/register-data/#airtable","text":"Airtable is a hybrid tool between spreadsheet and database and will best help you ensure the relationship between your entity objects and links, while managing the numerous metadata that you can easily standardize. Once the different tables are completed, you can link their contents in order to facilitate the entry, but also to ensure the relationship between the identifiers.","title":"Airtable"},{"location":"development/register-data/#google-sheet","text":"The Google Sheet tool provided in Google Drive allows you to have an online spreadsheet and export to JSON using the Export Sheet Data extension. Exporter en JSON avec Export Sheet Data Install the Google Sheet extension from the Add-ons tab, Download Add-ons button. In the same tab is now displayed the tool: once on your Entities or Links sheet, click on Open Sidebar and enter the following configuration (settings not mentioned below are on off , unchecked) : Export Format : JSON Export Sheet(s) : Current Sheet only Include first column : yes Export contents as array : yes The buttons at the bottom of the Sidebar allow you to complete the operation. All you have to do is to integrate the files in the /data directory of the software tree . Do not hesitate to use the [data validation] tool ( https://support.google.com/docs/answer/186103?co=GENIE.Platform%3DDesktop&hl=fr ) in conjunction with other sheets such as Countries , Relations etc. in order to standardize data completion as much as possible and avoid errors. You can also use the integrated translation function in Google Sheet for your multilingual versions or the SEARCH function to ensure the correspondence between your labels and unique identifiers.","title":"Google Sheet"},{"location":"process/data-structure/","text":"Data redesign \u00b6 The objective is to optimize (faster, more reliable) as much as possible the entries in the Otletosphere for administrators and to gather the injection circuits for developers. The data are currently distributed in two files whose modifications are not synchronized automatically and from free fields . This may leave room for bugs. This template will be integrated in a single spreadsheet (one single GSheet file). The objects each have their own sheet, Entities and Links . Other attached sheets ( Countries , Relations etc.) will serve as a database as for countries, relations and types. Thus, it will be possible at any time to expand these lists with new entries, thus increasing the (controlled) input possibilities on the site. It will also be an opportunity for each type and relationship to describe the context to which they are linked on their respective sheets, in order to guide the entry. Vocabulary \u00b6 integer : integer string : string list : string in a limited lexicon boolean : \"TRUE\" or \"FALSE\" The names of the tables, also called \"objects\" begin with a capital letter: Entity . Field names are lowercase: id . Data model \u00b6 Objet M\u00e9tadonn\u00e9e Typage Lexique Commentaire Entit\u00e9 id integer Entit\u00e9 label string Entit\u00e9 relation_otlet list coll\u00e8gue contemporain collaborateur opposant From Relations , col label Entit\u00e9 type list personne institution \u00e9v\u00e9nement \u0153uvre From Types , col label Entit\u00e9 nom string Entit\u00e9 prenom string Entit\u00e9 pays list liste des pays en fran\u00e7ais From Pays , col label_fr Entit\u00e9 pays_en list liste des pays en anglais From Pays , col label_en Entit\u00e9 discipline string Entit\u00e9 discipline_en string Entit\u00e9 description string Entit\u00e9 description_en string Entit\u00e9 image string Entit\u00e9 titre string < 70 Entit\u00e9 lien_wikipedia string URL Entit\u00e9 date_naissance integer < 2020 Ann\u00e9e Entit\u00e9 date_mort integer < 2020 Ann\u00e9e Entit\u00e9 genre list homme femme Entit\u00e9 public boolean If public sur le site ou non Lien from integer Entit\u00e9.id Lien to integer Entit\u00e9.id Lien label string < 70 Lien preuve string URL Relation label string < 20 Relation couleur string Call sign: no impact on the site Relation description string Call sign: no impact on the site Type label string < 20 Type description string Call sign: no impact on the site Pays label_fr string Pays label_en string Network from integer Entit\u00e9.id From Entit\u00e9 , col id Network to integer Entit\u00e9.id From Entit\u00e9 , col id History of changes \u00b6 The following is an exhaustive list of changes presented first as a list and then as a table. Everything will be unified in a single spreadsheet (a single GSheet file). Entities' table Deleted columns : shape because automatable such that if relation_otlet == institution, then shape = \"square\", otherwise shape = \"round\" brokenImage can be automated in the same way as shape . Modified Column : relation renamed title gender renamed genre group renamed relation_otlet . date_birth\" and \"date_death\" are expressed in years. Added columns : public allowing to hide a content which is not integrated to the site : we can then modify it without fear of breaking the interface Table Links Modified columns from and to replace from_name and to_name . No id will be entered manually, but automatically, depending on the label' referenced in one of the two fields. The id' will be entered automatically on the Network' sheet, and will be automatically added/exchanged when a label' is added/exchanged in from' or to'. Proof of relationship renamed proof and could only take the form of a URL (to a site, an image) to facilitate its integration on the site. title renamed `label","title":"Data structure"},{"location":"process/data-structure/#data-redesign","text":"The objective is to optimize (faster, more reliable) as much as possible the entries in the Otletosphere for administrators and to gather the injection circuits for developers. The data are currently distributed in two files whose modifications are not synchronized automatically and from free fields . This may leave room for bugs. This template will be integrated in a single spreadsheet (one single GSheet file). The objects each have their own sheet, Entities and Links . Other attached sheets ( Countries , Relations etc.) will serve as a database as for countries, relations and types. Thus, it will be possible at any time to expand these lists with new entries, thus increasing the (controlled) input possibilities on the site. It will also be an opportunity for each type and relationship to describe the context to which they are linked on their respective sheets, in order to guide the entry.","title":"Data redesign"},{"location":"process/data-structure/#vocabulary","text":"integer : integer string : string list : string in a limited lexicon boolean : \"TRUE\" or \"FALSE\" The names of the tables, also called \"objects\" begin with a capital letter: Entity . Field names are lowercase: id .","title":"Vocabulary"},{"location":"process/data-structure/#data-model","text":"Objet M\u00e9tadonn\u00e9e Typage Lexique Commentaire Entit\u00e9 id integer Entit\u00e9 label string Entit\u00e9 relation_otlet list coll\u00e8gue contemporain collaborateur opposant From Relations , col label Entit\u00e9 type list personne institution \u00e9v\u00e9nement \u0153uvre From Types , col label Entit\u00e9 nom string Entit\u00e9 prenom string Entit\u00e9 pays list liste des pays en fran\u00e7ais From Pays , col label_fr Entit\u00e9 pays_en list liste des pays en anglais From Pays , col label_en Entit\u00e9 discipline string Entit\u00e9 discipline_en string Entit\u00e9 description string Entit\u00e9 description_en string Entit\u00e9 image string Entit\u00e9 titre string < 70 Entit\u00e9 lien_wikipedia string URL Entit\u00e9 date_naissance integer < 2020 Ann\u00e9e Entit\u00e9 date_mort integer < 2020 Ann\u00e9e Entit\u00e9 genre list homme femme Entit\u00e9 public boolean If public sur le site ou non Lien from integer Entit\u00e9.id Lien to integer Entit\u00e9.id Lien label string < 70 Lien preuve string URL Relation label string < 20 Relation couleur string Call sign: no impact on the site Relation description string Call sign: no impact on the site Type label string < 20 Type description string Call sign: no impact on the site Pays label_fr string Pays label_en string Network from integer Entit\u00e9.id From Entit\u00e9 , col id Network to integer Entit\u00e9.id From Entit\u00e9 , col id","title":"Data model"},{"location":"process/data-structure/#history-of-changes","text":"The following is an exhaustive list of changes presented first as a list and then as a table. Everything will be unified in a single spreadsheet (a single GSheet file). Entities' table Deleted columns : shape because automatable such that if relation_otlet == institution, then shape = \"square\", otherwise shape = \"round\" brokenImage can be automated in the same way as shape . Modified Column : relation renamed title gender renamed genre group renamed relation_otlet . date_birth\" and \"date_death\" are expressed in years. Added columns : public allowing to hide a content which is not integrated to the site : we can then modify it without fear of breaking the interface Table Links Modified columns from and to replace from_name and to_name . No id will be entered manually, but automatically, depending on the label' referenced in one of the two fields. The id' will be entered automatically on the Network' sheet, and will be automatically added/exchanged when a label' is added/exchanged in from' or to'. Proof of relationship renamed proof and could only take the form of a URL (to a site, an image) to facilitate its integration on the site. title renamed `label","title":"History of changes"},{"location":"process/multilingual/","text":"The Otletosphere and its software offer a multilingual dimension, currently in French and English. Just as it is fluid to change entities, it is fluid to change the language of their description. A simple click on the language change buttons in the header and the entire contents of the description panel are translated into the desired language, according to the translation data entered in the database .","title":"Multilingual"},{"location":"process/technical-choices/","text":"Here are a few explanations on the technical choices that were made by the design and development team, always with a view to offering an optimal and informative reading experience to Internet users. Following of navigation \u00b6 For a complete data reading experience, it is necessary to be able to apprehend the data in different shapes. In this way, the fluidity of navigation is a key point that has determined the current structure of the site as a stack of sections . They each fill a screen and the header navigation allows you to switch from one to the other at any time. Union of views \u00b6 Between the two views Network and Records , there was no link in the first version of the site . Neither the content nor the display continued between the two sections, which are now joined together. Both views are now displayed from the site's single database. The different filtering options act simultaneously on the Network and Records sections, so that they become complementary. Indeed, the Network view is more focused on relationships while the Records view allows to browse the entities listed in alphabetical order. As the first view is at the center of the project, we decided to make the users converge there. The description panel is an intermediary between the two views. The View button located in its header allows you to find the node of the entity described in the Network view, even if you have selected the entity from the Records section. This shortcut allows you to easily switch from the list of entities to the visualization of their relationships. The entity thus described is also highlighted so that the user can quickly grasp the network surrounding it and thus switch to another entity. Connections between nodes \u00b6 The Description panel provides a list of nodes attached to the node described into. This makes it easier to move from one node to another without having to move around the network with the mouse: when you click on one of the connections, the view automatically refocuses on it. History and addressing \u00b6 Each time a map or node is clicked, the unique identifier of the linked entity is recorded in the page address, as well as in the browsing history. Also, its label becomes the title of the page that is saved in the browser. Thus, it is easy to retrieve an entity previously viewed: one could note its unique address or retrieve it in the browser history under the entity's name. The forward and backward keys of the navigator also allow you to move back and forth between the entities displayed during navigation. Transparency effects \u00b6 The density of the Network is such that it is difficult to read. It was decided to overcome this by implementing transparency effects on nodes and links, in interaction with the mouse. When clicking on a node or map, the entity goes into activated mode. This has various effects , including highlighting the selected node's network by greasing its border and links. This did not seem to us sufficient for ease of reading, since the visualization should not only run through selections. So we added an effect to the hover as well: as soon as the mouse passes over a node, all except its direct network become translucent. This state should not prevent the exceptional visualization of the node of the active entity, so it was also decided that this node and its network could not become translucent under any circumstances. Thus it is possible to customize the view by clicking on a node that has become particularly visible and to add transparency effects with the hover feature. The combination of the two allows you to place a bold marker and see node by node hovering which relationships they have. This system makes the mouse a very efficient visualization tool with a handful of features quickly understood by the user.","title":"Technical choices"},{"location":"process/technical-choices/#following-of-navigation","text":"For a complete data reading experience, it is necessary to be able to apprehend the data in different shapes. In this way, the fluidity of navigation is a key point that has determined the current structure of the site as a stack of sections . They each fill a screen and the header navigation allows you to switch from one to the other at any time.","title":"Following of navigation"},{"location":"process/technical-choices/#union-of-views","text":"Between the two views Network and Records , there was no link in the first version of the site . Neither the content nor the display continued between the two sections, which are now joined together. Both views are now displayed from the site's single database. The different filtering options act simultaneously on the Network and Records sections, so that they become complementary. Indeed, the Network view is more focused on relationships while the Records view allows to browse the entities listed in alphabetical order. As the first view is at the center of the project, we decided to make the users converge there. The description panel is an intermediary between the two views. The View button located in its header allows you to find the node of the entity described in the Network view, even if you have selected the entity from the Records section. This shortcut allows you to easily switch from the list of entities to the visualization of their relationships. The entity thus described is also highlighted so that the user can quickly grasp the network surrounding it and thus switch to another entity.","title":"Union of views"},{"location":"process/technical-choices/#connections-between-nodes","text":"The Description panel provides a list of nodes attached to the node described into. This makes it easier to move from one node to another without having to move around the network with the mouse: when you click on one of the connections, the view automatically refocuses on it.","title":"Connections between nodes"},{"location":"process/technical-choices/#history-and-addressing","text":"Each time a map or node is clicked, the unique identifier of the linked entity is recorded in the page address, as well as in the browsing history. Also, its label becomes the title of the page that is saved in the browser. Thus, it is easy to retrieve an entity previously viewed: one could note its unique address or retrieve it in the browser history under the entity's name. The forward and backward keys of the navigator also allow you to move back and forth between the entities displayed during navigation.","title":"History and addressing"},{"location":"process/technical-choices/#transparency-effects","text":"The density of the Network is such that it is difficult to read. It was decided to overcome this by implementing transparency effects on nodes and links, in interaction with the mouse. When clicking on a node or map, the entity goes into activated mode. This has various effects , including highlighting the selected node's network by greasing its border and links. This did not seem to us sufficient for ease of reading, since the visualization should not only run through selections. So we added an effect to the hover as well: as soon as the mouse passes over a node, all except its direct network become translucent. This state should not prevent the exceptional visualization of the node of the active entity, so it was also decided that this node and its network could not become translucent under any circumstances. Thus it is possible to customize the view by clicking on a node that has become particularly visible and to add transparency effects with the hover feature. The combination of the two allows you to place a bold marker and see node by node hovering which relationships they have. This system makes the mouse a very efficient visualization tool with a handful of features quickly understood by the user.","title":"Transparency effects"}]}